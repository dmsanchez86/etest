{"version":3,"mappings":"mSAeO,IAAMA,EAAb,MAAM,QAQJC,YACUC,EACAC,EACAC,EACAC,GAHAC,sBACAA,aACAA,gBACAA,eAXVA,YAAc,GAEdA,wBAA6B,EAE7BA,UAAqB,IAAIC,IACzBD,UAAqB,IAAIC,IAQvBD,KAAKE,KAAOF,KAAKG,eAAeC,YAAYC,UAAUC,IAGjDC,OAAOC,KAAKR,KAAKS,QAAQC,SAAWH,OAAOC,KAAKF,GAAQI,QACzDV,KAAKW,MAAMC,UAAS,WAGtBZ,KAAKS,OAASH,IAGhBN,KAAKa,KAAOb,KAAKc,QAAQT,UAAWC,KAGhB,qCAAhBA,EAAOS,MACS,qCAAhBT,EAAOS,OAEPf,KAAKgB,YAAW,GAGC,+CAAhBV,EAAOS,OACRf,KAAKS,OAAS,GACdT,KAAKgB,YAAW,MAKhBC,WAAQ,qCACTV,OAAOC,KAAKZ,EAAKa,QAAQC,SAC1Bd,EAAKe,MAAMC,YAASM,MAA4B,CAACC,QAASvB,EAAKa,OAAQW,IAAK,gCAC5ExB,EAAKyB,mBAAoB,QACnBzB,EAAK0B,SAASC,iBAAiB3B,EAAKa,OAAQ,4BAEpDb,EAAKoB,mBACCpB,EAAK0B,SAASE,2BAPR,GAURR,WAAWpB,GAAkB,GAAK,qCACnCW,OAAOC,KAAKX,EAAKY,QAAQC,OAAS,IAAMd,UAGrCC,EAAKyB,SAASC,iBAAiB1B,EAAKY,OAAQ,gCAC5CZ,EAAKyB,SAASG,yBALkB,GAQxCC,cACE1B,KAAKE,KAAKyB,cACV3B,KAAKa,KAAKc,4DA5DDC,GAAwBC,yEAAxBD,EAAwBE,gFAHjCD,8DAGSD,GAAb,qCCTO,IAAMG,EAAb,MAAM,sDAAOH,8BAAwBE,iKCLrCD,iBACEA,iBACEA,eACEA,iCACFA,QACFA,QACFA,6CDDaD,GAAb,oEEKUC,gBAAmCA,kBAAMA,+BACzCA,gBAAoCA,kBAAMA,iDAH9CA,eACEA,kBAA2DA,kEACzDA,yCACAA,yCAAkDA,mBACpDA,QACFA,iCAHWA,+CACAA,0IAMPA,6CACEA,qCAA6B,mCAA7BA,CAA6B,wBAA7BA,CAA6B,8CAFjCA,eACEA,4BASFA,+BATaA,mKAYXA,6CACEA,qCAA6B,eAA7BA,CAA6B,gCAA7BA,CAA6B,0BAA7BA,CAA6B,+DAU/BA,kBACEA,wBAUFA,+BATIA,qFAAqC,mEAArCA,CAAqC,6EAArCA,CAAqC,iEAArCA,CAAqC,qEAArCA,CAAqC,mEAArCA,CAAqC,+EAArCA,CAAqC,gGAd3CA,eACEA,6BAUAA,gCACAA,wBAYFA,0CAvBaA,uEAUEA,qCACIA,sMAejBA,6CACEA,qCAA6B,cAA7BA,CAA6B,+BAA7BA,CAA6B,yBAA7BA,CAA6B,mBAA7BA,CAA6B,iEAFjCA,eACEA,8BAWAA,iCAWFA,0CAtBaA,uEAWEA,kFAYfA,eACEA,iCACFA,wCADeA,kFAEfA,eACEA,iCACFA,wCADeA,gEAnEjBA,SACEA,wCAYAA,wCA0BAA,yCAwBAA,yCAGAA,0CAGFA,+BApEQA,8EAYAA,oHA0BAA,kHAwBAA,mHAGAA,8KA/EZA,iBACEA,iBACEA,kBACEA,oCACFA,QAEAA,uBAOAA,mCAwEAA,eACEA,mCAMFA,QACFA,QACFA,wCA5FUA,mCACoBA,8BAAa,mBAGjCA,yDAOSA,gCA0EXA,gCAAoB,cAApBA,CAAoB,gBAApBA,CAAoB,aAApBA,CAAoB,uCAxF9BA,SACEA,yBA+FFA,6BA/FuCA,qIAmGnCA,8CACEA,qCAA6B,4BAA7BA,CAA6B,8CAQ/BA,8CACEA,qCAA6B,iBAA7BA,CAA6B,+CAXjCA,kBACEA,+BASAA,+BAQFA,8BAjBcA,uEASAA,wEC9FT,IAAMG,GAAb,MAAM,QA+BJrC,YACUC,EACAC,EACAC,GAFAE,aACAA,sBACAA,aA9BVA,gBAAkCA,KAAKW,MAAMsB,OAAQlC,IAAS,QAAC,OAA0B,QAA1BmC,EAAiB,QAAjB5B,EAAK,MAALP,OAAK,EAALA,EAAOoC,kBAAU,eAAEhB,eAAO,eAAEiB,YAE3FpC,UAAiB,GACjBA,UAAkB,IAAIqC,KAAU,IAEhCrC,iBAA4CA,KAAKW,MAAMsB,OAAQlC,GAAUA,EAAMoC,YAE/EnC,gBAA6CA,KAAKW,MAAMsB,OAAOlC,GAASA,EAAMuC,oBAAoBC,MAClGvC,eAAoCA,KAAKW,MAAMsB,OAAOlC,IAAQ,MAAC,OAAW,QAAXO,EAAK,MAALP,OAAK,EAALA,EAAOyC,YAAI,eAAEC,WAI5EzC,cAAmB,EACnBA,aAAkB,EAKlBA,uBAAyB,GACzBA,uBAAyB,GACzBA,uBAAyB,GACzBA,sBAAwB,GAExBA,SAAoB,IAAIC,IAExBD,kBAAoB,GAOlBA,KAAK0C,YAEL1C,KAAK2C,IAAM3C,KAAKW,MAAMsB,OAAOlC,GAASA,GAAOM,UAAUN,kBACrD,IACEC,KAAK4C,QAA0B,QAAhBtC,EAAI,MAAJP,OAAI,EAAJA,EAAMoC,kBAAU,eAAES,QACjC5C,KAAK6C,OAAyB,QAAhBX,EAAI,MAAJnC,OAAI,EAAJA,EAAMoC,kBAAU,eAAEU,OAChC7C,KAAKwC,KAAiB,QAAVM,EAAI,MAAJ/C,OAAI,EAAJA,EAAMyC,YAAI,eAAED,KACxBvC,KAAKI,YAA8B,QAAhB2C,EAAI,MAAJhD,OAAI,EAAJA,EAAMoC,kBAAU,eAAEhB,QAErCnB,KAAKgD,aAAe,CAAC,MAAuB,QAAhBC,EAAI,MAAJlD,OAAI,EAAJA,EAAMoC,kBAAU,eAAEe,gBACvCC,IAASC,QAAQC,IAAIF,OAIlCT,YACE1C,KAAKsD,KAAOtD,KAAKuD,MAAMD,OAGzB5B,cACE1B,KAAK2C,IAAIhB,cAGXV,YAEAuC,cACExD,KAAKW,MAAMC,UAAS,WACpBZ,KAAKuD,MAAME,UAASlD,iBAAKP,KAAKI,aAAcJ,KAAKG,eAAgB,+DA9DxDyB,GAAmBC,6DAAnBD,EAAmBE,29BDjBhCD,gCAEAA,kDAkGAA,kDAlGeA,6ICeFD,GAAb,oDChBEC,iBACEA,gCACFA,+BADsBA,gCAAmB,eAAnBA,CAAmB,UAAnBA,CAAmB,0CAF3CA,iBACEA,wBAGFA,8BAH2BA,sDCQpB,IAAM6B,GAAb,MAAM,QAOJ/D,YACUC,EACAC,EACAC,GAFAE,yBACAA,aACAA,cATVA,QAAa,EACbA,UAAqB,IAAIC,IAEzBD,WAAa,GACbA,WAAgB,EAOdA,KAAK2D,KAAO3D,KAAK4D,MAAMnD,OAAOJ,UAAUN,IACtCC,KAAK6D,GAAK9D,EAAO8D,KAIrBnC,cACE1B,KAAK2D,KAAKhC,cAGNV,WAAQ,qCACZ,IACE,IAAIpB,QAAsBD,EAAKkE,kBAAkBC,eAAenE,EAAKiE,IAEjEhE,GAAYU,OAAOC,KAAKX,GAAUa,OACpCd,EAAKoE,MAAQnE,EAEVD,EAAKqE,OAAOC,IAAIC,QAAQ,WAAa,GACtCvE,EAAKqE,OAAOG,SAAS,CAAC,gCAGnBvE,GACPuD,QAAQC,IAAIxD,GACTD,EAAKqE,OAAOC,IAAIC,QAAQ,WAAa,GACtCvE,EAAKqE,OAAOG,SAAS,CAAC,4BAdd,iDArBHxC,GAAwBC,6DAAxBD,EAAwBE,mQDTrCD,6BAAqCA,qFCSxBD,GAAb,2BCOO,IAAMyC,GAAb,MAAM,QASJ1E,YACUC,EACAC,GADAG,yBACAA,aAVVA,UAAkB,IAAIqC,KAAU,IAChCrC,WAAmB,IAAIqC,KAAU,IAEjCrC,SAAoB,IAAIC,IACxBD,UAAkB,GAElBA,gBAAgCA,KAAKW,MAAMsB,OAAOnC,GAASA,EAAMwC,oBAAoBC,MAMnFvC,KAAKsE,IAAMtE,KAAKW,MAAMN,UAAWP,IAC/BE,KAAKwC,KAAO1C,EAAM0C,KAAKD,OAI3BtB,WACEjB,KAAKsD,KAAO,IAAIjB,KAAU,CACxBkC,SAAU,IAAIlC,KAAY,GAAIA,iBAIlCX,cACE1B,KAAKsE,IAAI3C,cAGL6C,0BAAuB,6CAE3B,GAAG5E,EAAK0D,KAAKmB,MAAM,CACjB,IAAMF,YAAa3E,EAAK0D,KAAKoB,SAE7B,IACE,IAAIpE,EAAO,CACTiE,SAAUxE,EAAS4E,MACnBC,OAAyB,QAAjB9E,EAAS,QAATD,IAAK2C,YAAI,eAAEoC,cAAM,eAAEf,IAEzB3B,QAAsBtC,EAAKkE,kBAAkBe,sBAAsBvE,GAEpE4B,EAASqC,UACVnB,QAAQC,IAAI,oBACZzD,EAAK0D,KAAKwB,QACVlF,EAAKe,MAAMC,YAASmE,KAAmB,CAACC,IAAK9C,EAAS+C,eAEtD7B,QAAQC,IAAI,0BAEP/C,GACP8C,QAAQC,IAAI,YAAa/C,MApBF,GA0BvB4E,eAAetF,GAAsB,qCAEzC,GAAGA,EAAKiE,GACN,IACE,IAAI/D,EAAO,CACTyE,SAAU3E,EAAKiE,GACfe,OAAQhF,EAAKuF,WAEXpF,QAAsBF,EAAKiE,kBAAkBoB,eAAepF,GAE7DC,EAASwE,UACVnB,QAAQC,IAAI,mCACZxD,EAAKyD,KAAKwB,QACVjF,EAAKc,MAAMC,YAASmE,KAAmB,CAACC,IAAKjF,EAASkF,eAEtD7B,QAAQC,IAAI,oCAEPvD,GACPsD,QAAQC,IAAI,YAAavD,KAlBY,iDAtDhC8B,GAAgCC,iDAAhCD,EAAgCE,icChB7CD,iBACEA,iBACEA,eACEA,iBACEA,gBAAqDA,kBAAqCA,sCAAyBA,QAEnHA,kBAAyBA,mCAAYhC,8BACnCgC,iBACEA,mBACFA,QACAA,kBACEA,qBAAuCA,mBAAMA,QAC/CA,QACFA,QACFA,QACFA,QAEAA,gBACEA,6CACFA,QACFA,QACFA,eAfcA,mCAYwBA,6BAAiB,iFDF1CD,GAAb,0BENUC,qBAAwFA,sBAAUA,cAA1FA,kDACRA,qBAAqEA,SAAeA,kCAA5EA,oBAA6DA,iEAT3EA,iBACEA,gBACEA,kBAAKA,gBAAsBA,2BAAuBA,QAAKA,2CAA8BA,gBAAsBA,SAAoBA,QAAIA,0BAAcA,iBAAsBA,+BAAyCA,QAClNA,QAEAA,mBAEEA,sBAAqBA,iEAAgB,8DACnCA,+CACAA,+CACFA,QAEAA,sBAAQA,oEAAmB,sDAAoB,KAC7CA,sBAAmBA,eAAEA,QACrBA,sBAAmBA,eAAEA,QACrBA,sBAAmBA,eAAEA,QACrBA,sBAAmBA,eAAEA,QACrBA,sBAAmBA,eAAEA,QACrBA,sBAAmBA,eAAEA,QACrBA,sBAAoBA,gBAAGA,QACzBA,QACFA,QACFA,sCApB+BA,sCAAgFA,sDAA4DA,uDAKlJA,+BACSA,yEACeA,qDAGrCA,6DAcVA,SACEA,iCACFA,kCADsBA,gCAAoB,qCAF5CA,kBACEA,kCAGFA,8BAHiCA,kEAIjCA,kBACEA,SAAyEA,gBAA0CA,gBAAIA,QACzHA,8BADEA,oHAA4EA,6EAI9EA,kBACEA,gBAAkEA,mBAA4CA,6BAAgBA,QAChIA,eADsBA,sGAIpBA,qBAAwGA,0DAAwCA,aAACA,mCAG/IA,gBAA4CA,SAAsBA,8BAAtBA,8DAC5CA,gBAA4CA,SAAYA,8BAAZA,sDAG1CA,qBAAuDA,SAAYA,kCAA3BA,iBAAeA,8DAG3DA,qBAAwGA,0DAA0CA,aAACA,SCvClJ,IAAMuD,GAAb,MAAM,QAkBJzF,YACUC,EACAC,EACAC,EACAC,GAHAC,aACAA,yBACAA,aACAA,cArBVA,QAAa,EACbA,UAAkB,GAClBA,UAAqB,IAAIC,IACzBD,SAAoB,IAAIC,IAExBD,gBAAkB,GAClBA,cAAgB,GAChBA,WAAgB,EAChBA,cAAmB,EACnBA,UAAe,EACfA,WAAa,EACbA,WAAgB,EAChBA,gBAAoB,GACpBA,WAAgB,GAEhBA,iBAA8CA,KAAKW,MAAMsB,OAAQ3B,GAAUA,EAAMgC,oBAAoBC,MAQnGvC,KAAK2D,KAAO3D,KAAK4D,MAAMnD,OAAOJ,UAAUC,IACtCN,KAAK6D,GAAKvD,EAAOuD,KAEnB7D,KAAKsE,IAAMtE,KAAKW,MAAMsB,OAAO3B,GAASA,EAAMkC,MAAMnC,UAAUC,IAE1DN,KAAKwC,KAAOlC,EAAKiC,OAIrBb,cACE1B,KAAK2D,KAAKhC,cACV3B,KAAKsE,IAAI3C,cAGLV,SAASrB,GAAgB,qCAC7B,IACKA,IACDC,EAAKwF,MAAQ,EACbxF,EAAKyF,KAAO,EACZzF,EAAK0F,MAAQ,EACb1F,EAAK2F,SAAW,EAChB3F,EAAK4F,MAAQ,EACb5F,EAAKsC,WAAa,IAGpB,MAAMrC,EAAc,CAClB4F,uBAAwB7F,EAAKgE,GAC7BsB,UAAWtF,EAAK2C,KAAKqB,GACrByB,KAAMzF,EAAKyF,KACXK,MAAO9F,EAAK8F,OAGd,IAAI5F,QAAsBF,EAAKiE,kBAAkB8B,sBAAsB9F,GAgBvE,GAdAsD,QAAQC,IAAItD,GAERA,EAASwE,WACX1E,EAAK0E,SAAWxE,EAASwE,UAEvBxE,EAASoC,aACXtC,EAAKsC,WAAapC,EAASoC,WAAW0D,MAEpC9F,EAAS0F,QACX5F,EAAK4F,MAAQ1F,EAAS0F,OAEpB1F,EAASyF,WACX3F,EAAK2F,SAAWzF,EAASyF,UAEvBzF,EAASwF,MAAO,CAClB1F,EAAK0F,MAAQxF,EAASwF,MAEtB1F,EAAKiG,WAAa,GAClB,QAASxF,EAAI,EAAGA,EAAIT,EAAK0F,MAAOjF,IAC9BT,EAAKiG,WAAWC,KAAKzF,UAGlBR,GACPsD,QAAQC,IAAIvD,KA3Ce,GA+C/BkG,UACEhG,KAAKsF,KAAOW,SAASjG,KAAKqF,OAC1BrF,KAAKiB,WAEPiF,OACElG,KAAKsF,OACLtF,KAAKqF,MAAQrF,KAAKsF,KAClBtF,KAAKiB,WAGPkF,OACEnG,KAAKsF,OACLtF,KAAKqF,MAAQrF,KAAKsF,KAClBtF,KAAKiB,WAGPmF,gBACEpG,KAAKiE,OAAOoC,cAAc,qCAAqCrG,KAAK6D,MACpE7D,KAAKiB,UAAS,iDAvGLW,GAAgCC,yEAAhCD,EAAgCE,86CDb7CD,iBACEA,iBACEA,yBAuBFA,QACAA,iBACEA,wBAKAA,wBAGFA,QACAA,iBACEA,wBAIAA,iBACEA,2BACAA,oBACEA,sBACAA,2BACAA,2BACAA,UACAA,sBAA2BA,qDAAmB,2BAAWhC,cACvDgC,6BACFA,QAASA,UACXA,QACAA,4BACFA,QACFA,QAEFA,eAtDgDA,mFAyBuBA,yDAK3CA,0DAKCA,yDAKmGA,kCAGjHA,qDACAA,qDACPA,wDAC2BA,kCACAA,uCAClBA,gCAE+GA,4ICvCnHD,GAAb,8FCNMC,4CACEA,qCAA6B,mCAA7BA,CAA6B,wBAA7BA,CAA6B,kEAFjCA,eACEA,6BASAA,gCACFA,0CAVaA,uEASEA,mIAIbA,4CACMA,qCAA6B,eAA7BA,CAA6B,gCAA7BA,CAA6B,0BAA7BA,CAA6B,kEAFrCA,eACEA,6BAUAA,gCACFA,0CAXaA,uEAUEA,0JAIbA,6CACMA,qCAA6B,cAA7BA,CAA6B,+BAA7BA,CAA6B,yBAA7BA,CAA6B,oBAA7BA,CAA6B,kEAFrCA,eACEA,8BAWAA,gCACFA,0CAZaA,uEAWEA,kFAGfA,eACEA,gCACFA,wCADeA,kFAGfA,eACEA,gCACFA,wCADeA,gEAhDjBA,SACEA,wBAaAA,wBAcAA,wBAeAA,wBAIAA,wBAGFA,8BAjDQA,0HAaAA,2FAcAA,yFAeAA,yFAIAA,kNAQNA,8CACEA,qCAA6B,4BAA7BA,CAA6B,8CAQ/BA,8CACEA,qCAA6B,iBAA7BA,CAA6B,+CAXjCA,kBACEA,+BASAA,+BAQFA,8BAjBcA,uEASAA,wECxDhB,MAAMyE,GAAiB,CACnB,CACIC,KAAM,GAAIC,UAAW9G,EAA0B+G,YAAa,CAACC,KAC7DC,SAAU,CACN,CAAEJ,KAAM,GAAIC,UCTxB,MAAM,QAGJ7G,YAAoBC,gBAFpBI,UAAkB,IAAIqC,KAAU,IAIhCpB,WACEjB,KAAK0C,YAGPA,YACE1C,KAAKsD,KAAOtD,KAAKuD,MAAMD,qDAVd1B,GAAuBC,qCAAvBD,EAAuBE,yLCRpCD,iBACEA,kBACEA,oCACFA,QAEAA,mCAKFA,eATQA,mCACoBA,8BAIxBA,gCAAoB,cAApBA,CAAoB,gBAApBA,CAAoB,sEDEXD,GAAb,IDUY,CAAE2E,KAAM,SAAUC,UAAWxE,IAC7B,CAAEuE,KAAM,WAAYC,UGRhC,MAAM,QASJ7G,YACUC,EACAC,GADAG,aACAA,aAVVA,UAAkB,IAAIqC,KAAU,IAEhCrC,cAAmB,EACnBA,aAAkB,EAClBA,kBAAoB,GAEpBA,SAAoB,IAAIC,IAMtBD,KAAK2C,IAAM3C,KAAKW,MAAMsB,OAAOnC,GAASA,GAAOO,UAAUP,cACrD,IACEE,KAAK4C,QAA0B,QAAhB7C,EAAI,MAAJD,OAAI,EAAJA,EAAMqC,kBAAU,eAAES,QACjC5C,KAAK6C,OAAyB,QAAhBvC,EAAI,MAAJR,OAAI,EAAJA,EAAMqC,kBAAU,eAAEU,OAEhC7C,KAAKgD,aAAe,CAAC,MAAuB,QAAhBd,EAAI,MAAJpC,OAAI,EAAJA,EAAMqC,kBAAU,eAAEe,gBACvCJ,GAASM,QAAQC,IAAIP,MAIlC7B,WACEjB,KAAK0C,YAGPA,YACE1C,KAAKsD,KAAOtD,KAAKuD,MAAMD,qDA5Bd1B,GAA2BC,iDAA3BD,EAA2BE,oqBJXxCD,iBACEA,kBACEA,oCACFA,QAEAA,iCAmDFA,QAEAA,kDAzDQA,mCACoBA,8BAAa,qBAGxBA,sGIMJD,GAAb,IHSY,CAAE2E,KAAM,cAAeC,UAAW9C,IAElC,CAAE6C,KAAM,aAAcC,UAAWI,KACjC,CAAEL,KAAM,oBAAqBC,UAAWnC,IACxC,CAAEkC,KAAM,kBAAmBC,UAAWpB,OASzC,IAAMyB,GAAb,MAAM,sDAAOjF,4DAHF,CAACkF,cAAsBR,KACtBQ,QAEClF,GAAb,GIIWmF,GAAb,MAAM,sDAAOnF,4DAVF,CACPoF,KACA3E,KACAA,KACA4E,KACAC,IACAL,GACAM,QAGSvF,GAAb","names":["D","constructor","t","i","a","o","this","u","subP","activatedRoute","queryParams","subscribe","p","Object","keys","params","length","store","dispatch","susA","actions","type","getAllData","ngOnInit","x","filters","ref","validationInitial","storeSrv","expensivesByDate","getCategoriesExpensives","getAllDataExpensives","ngOnDestroy","unsubscribe","n","e","selectors","F","ue","select","l","expensives","showChart","r","categories_expenses","data","user","accounts","buildForm","sub","loading","loaded","m","Z","dataGraphics","C","complete","it","console","log","form","utils","toggleChart","createUrl","me","susP","route","id","expensivesService","getDataExpense","gasto","router","url","indexOf","navigate","xe","sus","category","createExpensiveCategory","valid","controls","value","person","createCategoryExpense","reset","Q","any","categories","deleteCategory","id_person","Qe","pageA","page","pages","quantity","total","id_category_expensives","limit","getExpensesByCategory","rows","pagesArray","push","setPage","parseInt","next","prev","seeByCategory","navigateByUrl","et","path","component","canActivate","U","children","Y","tt","_","nt","g","O","A","M"],"sources":["./src/app/pages/dashboard/expensives/start-expensives/start-expensives.component.ts","./src/app/pages/dashboard/expensives/create/create-expensive.component.ts","./src/app/pages/dashboard/expensives/create/create-expensive.component.html","./src/app/pages/dashboard/expensives/expensives.component.html","./src/app/pages/dashboard/expensives/expensives.component.ts","./src/app/pages/dashboard/expensives/detail/detail-expensive.component.html","./src/app/pages/dashboard/expensives/detail/detail-expensive.component.ts","./src/app/pages/dashboard/expensives/expensive-category/create/create-expensive-category.component.ts","./src/app/pages/dashboard/expensives/expensive-category/create/create-expensive-category.component.html","./src/app/pages/dashboard/expensives/expensive-category/detail/detail-expensive-category.component.html","./src/app/pages/dashboard/expensives/expensive-category/detail/detail-expensive-category.component.ts","./src/app/pages/dashboard/expensives/graphics/graphics-expensives.component.html","./src/app/pages/dashboard/expensives/expensives-routing.module.ts","./src/app/pages/dashboard/expensives/home/home-expensives.component.ts","./src/app/pages/dashboard/expensives/home/home-expensives.component.html","./src/app/pages/dashboard/expensives/graphics/graphics-expensives.component.ts","./src/app/pages/dashboard/expensives/expensives.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { StoreService } from 'src/app/services/store.service';\r\nimport { IState } from 'src/app/store';\r\nimport { ResetFiltersExpensives, SetFiltersExpensivesInitial } from 'src/app/store/actions/expensives.actions';\r\n\r\n@Component({\r\n  selector: 'app-start-expensives',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\nexport class StartExpensivesComponent implements OnInit, OnDestroy {\r\n  params: any = {};\r\n\r\n  validationInitial: boolean = false;\r\n\r\n  subP: Subscription = new Subscription();\r\n  susA: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute, \r\n    private store: Store<IState>,\r\n    private storeSrv: StoreService,\r\n    private actions: Actions<IState>\r\n  ) {\r\n    this.subP = this.activatedRoute.queryParams.subscribe(params => {\r\n      // console.log('qa suscription (router) params start-expensives.component', params);\r\n\r\n      if(Object.keys(this.params).length && !Object.keys(params).length){\r\n        this.store.dispatch(ResetFiltersExpensives());\r\n      }\r\n\r\n      this.params = params;\r\n    });\r\n\r\n    this.susA = this.actions.subscribe((action: any) => {\r\n      // console.log('action', action);\r\n      if(\r\n        action.type === '[Expensives User] Create Success' || \r\n        action.type === '[Expensives User] Delete Success'\r\n      ){\r\n        this.getAllData(true);\r\n      }\r\n\r\n      if(action.type === '[Expensives User] Reset Filters Expensives'){\r\n        this.params = {};\r\n        this.getAllData(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    if(Object.keys(this.params).length){\r\n      this.store.dispatch(SetFiltersExpensivesInitial({filters: this.params, ref: 'initial start 999999999999' }));\r\n      this.validationInitial = true;\r\n      await this.storeSrv.expensivesByDate(this.params, 'onInitSTART EXPENSIVES1');\r\n    }\r\n    this.getAllData();\r\n    await this.storeSrv.getCategoriesExpensives();\r\n  }\r\n  \r\n  async getAllData(reload: boolean = false) {\r\n    if(Object.keys(this.params).length > 1 && !reload){\r\n      return;\r\n    }\r\n    await this.storeSrv.expensivesByDate(this.params, 'onInitSTART EXPENSIVES');\r\n    await this.storeSrv.getAllDataExpensives();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subP.unsubscribe();\r\n    this.susA.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-expensive',\r\n  templateUrl: './create-expensive.component.html'\r\n})\r\nexport class CreateExpensiveComponent {\r\n}\r\n","\r\n<div class=\"container pt-5 mx-auto\">\r\n  <div class=\"grid gap-4\">\r\n    <div>\r\n      <app-form-expensives class=\"form-general\"></app-form-expensives>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<app-create-expensive></app-create-expensive>\r\n\r\n<ng-container *ngIf=\"(expensives$ | async) as expensives\">\r\n  <div class=\"container pt-5 mx-auto\" *ngIf=\"expensives?.data as data\">\r\n    <div class=\"grid gap-4\">\r\n      <form [formGroup]=\"form\">\r\n        <app-expensives-filters [form]=\"form\" [isFromCreate]=\"true\"></app-expensives-filters>\r\n      </form>\r\n\r\n      <div *ngIf=\"data?.length && loaded\">\r\n        <span class=\"cursor-pointer font-semibold hover:font-bold\" (click)=\"toggleChart()\">\r\n          <span *ngIf=\"(showChart$ | async)\">- Hide</span>\r\n          <span *ngIf=\"!(showChart$ | async)\">+ Show</span> Chart\r\n        </span>\r\n      </div>\r\n\r\n      <ng-container *ngIf=\"loaded\">\r\n        <div *ngIf=\"!form.controls.filter.value && (showChart$ | async)\">\r\n          <app-line *ngIf=\"dataGraphics?.length\" \r\n            [dataGraphics]=\"dataGraphics\"\r\n            [nameLegend]=\"'All Time Expensives'\"\r\n            [nameAvg]=\"'Average All'\"\r\n            [title]=\"{\r\n              text: 'All Expensives',\r\n              align: 'center'\r\n            }\"\r\n          ></app-line>\r\n        </div>\r\n  \r\n        <div *ngIf=\"form.controls.filter.value === 'month' && form.controls.month.value && (showChart$ | async)\">\r\n          <app-line *ngIf=\"dataGraphics?.length\" \r\n            [dataGraphics]=\"dataGraphics\"\r\n            [type]=\"'month'\"\r\n            [nameLegend]=\"'Month Expensives'\"\r\n            [nameAvg]=\"'Average Month'\"\r\n            [title]=\"{\r\n              text: 'Month Expensives',\r\n              align: 'center'\r\n            }\"\r\n          ></app-line>\r\n          <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n          <div id=\"chart\" *ngIf=\"chartOptionsMonth4?.series\">\r\n            <apx-chart\r\n              [series]=\"chartOptionsMonth4?.series\"\r\n              [chart]=\"chartOptionsMonth4?.chart\"\r\n              [dataLabels]=\"chartOptionsMonth4?.dataLabels\"\r\n              [grid]=\"chartOptionsMonth4?.grid\"\r\n              [stroke]=\"chartOptionsMonth4?.stroke\"\r\n              [title]=\"chartOptionsMonth4?.title\"\r\n              [plotOptions]=\"chartOptionsMonth4?.plotOptions\"\r\n              [colors]=\"chartOptionsMonth4?.colors\"\r\n            ></apx-chart>\r\n          </div>\r\n        </div>\r\n  \r\n        <div *ngIf=\"form.controls.filter.value === 'year' && form.controls.year.value && (showChart$ | async)\">\r\n          <app-line *ngIf=\"dataGraphics?.length\" \r\n            [dataGraphics]=\"dataGraphics\"\r\n            [type]=\"'year'\"\r\n            [nameLegend]=\"'Year Expensives'\"\r\n            [nameAvg]=\"'Average Year'\"\r\n            [xAxis]=\"{}\"\r\n            [title]=\"{\r\n              text: 'Year Expensives',\r\n              align: 'center'\r\n            }\"\r\n          ></app-line>\r\n          <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n          <!-- <div id=\"chart2\" *ngIf=\"chartOptionsYear2?.series\">\r\n            <apx-chart\r\n              [series]=\"chartOptionsYear2?.series\"\r\n              [chart]=\"chartOptionsYear2?.chart\"\r\n              [dataLabels]=\"chartOptionsYear2?.dataLabels\"\r\n              [grid]=\"chartOptionsYear2?.grid\"\r\n              [stroke]=\"chartOptionsYear2?.stroke\"\r\n              [title]=\"chartOptionsYear2?.title\"\r\n            ></apx-chart>\r\n          </div> -->\r\n        </div>\r\n        <div *ngIf=\"form.controls.filter.value === 'date' && form.controls.date.value && (showChart$ | async)\">\r\n          <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n        </div>\r\n        <div *ngIf=\"form.controls.filter.value === 'dates' && form.controls.date1.value && form.controls.date2.value && (showChart$ | async)\">\r\n          <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n        </div>\r\n      </ng-container>\r\n\r\n\r\n      <div>\r\n        <app-expensives-person\r\n          [showHeader]=\"false\" \r\n          [showLink]=\"false\" \r\n          [showDelete]=\"true\" \r\n          [padding]=\"false\" \r\n          [limit]=\"30\"></app-expensives-person>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #donuts>\r\n  <div class=\"grid grid-cols-2\">\r\n    <app-donut *ngIf=\"dataGraphics?.length\" \r\n      [dataGraphics]=\"dataGraphics\"\r\n      [type]=\"'categoryexpensives'\"\r\n      [title]=\"{\r\n        text: 'Year Category',\r\n        align: 'center'\r\n      }\"\r\n      ></app-donut>\r\n\r\n    <app-donut *ngIf=\"dataGraphics?.length\" \r\n      [dataGraphics]=\"dataGraphics\"\r\n      [type]=\"'account'\"\r\n      [title]=\"{\r\n        text: 'Year Category',\r\n        align: 'center'\r\n      }\"\r\n      ></app-donut>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ICategoryExpense } from 'src/app/interfaces/categories_expenses';\r\nimport { IState } from 'src/app/store';\r\nimport { IAccount } from 'src/app/interfaces/accounts';\r\nimport { IUserData } from 'src/app/interfaces/user';\r\nimport { IStoreExpensives } from 'src/app/interfaces/expensives'\r\nimport { SetShowChartFiltersExpensives } from 'src/app/store/actions/expensives.actions';\r\nimport { UtilsExpensivesService } from './services/utils-expensives.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-expensives',\r\n  templateUrl: './expensives.component.html',\r\n})\r\nexport class ExpensivesComponent implements OnInit, OnDestroy {\r\n  public chartOptionsMonth4: any;\r\n  public chartOptionsYear2: any;\r\n\r\n  showChart$: Observable<boolean> = this.store.select((state) => state?.expensives?.filters?.showChart);\r\n\r\n  user:IUserData = {};\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  expensives$: Observable<IStoreExpensives> = this.store.select((state) => state.expensives);\r\n\r\n  categories: Observable<ICategoryExpense[]> = this.store.select(state => state.categories_expenses.data);\r\n  accounts$: Observable<IAccount[]> = this.store.select(state => state?.user?.accounts);\r\n\r\n  queryParams: any;\r\n\r\n  loading: boolean = false;\r\n  loaded: boolean = false;\r\n\r\n  yearValue: any;\r\n  monthValue: any;\r\n\r\n  dataGraphicMonth2: any = [];\r\n  dataGraphicMonth3: any = [];\r\n  dataGraphicMonth4: any = [];\r\n  dataGraphicYear2: any = [];\r\n\r\n  sub: Subscription = new Subscription();\r\n\r\n  dataGraphics: any = [];\r\n\r\n  constructor(\r\n    private store: Store<IState>, \r\n    private activatedRoute: ActivatedRoute,\r\n    private utils: UtilsExpensivesService\r\n  ) {\r\n    this.buildForm();\r\n\r\n    this.sub = this.store.select(state => state).subscribe(data => {\r\n      try {\r\n        this.loading = data?.expensives?.loading;\r\n        this.loaded = data?.expensives?.loaded;\r\n        this.user = data?.user?.data;\r\n        this.queryParams = data?.expensives?.filters;\r\n\r\n        this.dataGraphics = [{}, ...data?.expensives?.complete];\r\n      } catch (error) { console.log(error); }\r\n    });\r\n  }\r\n\r\n  buildForm(){\r\n    this.form = this.utils.form();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  toggleChart(): void{\r\n    this.store.dispatch(SetShowChartFiltersExpensives());\r\n    this.utils.createUrl({...this.queryParams}, this.activatedRoute, 'toggleChart()');\r\n  }\r\n}\r\n","<div class=\"container mt-8 mx-auto\" *ngIf=\"gasto?.id\">  \r\n  <div class=\"grid gap-4\" *ngIf=\"gasto?.id\">\r\n    <app-item-expensive [showDelete]=\"true\" [item]=\"gasto\" [link]=\"false\" [complete]=\"true\"></app-item-expensive>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ExpensivesService } from 'src/app/services/expensives.service';\r\n\r\n@Component({\r\n  selector: 'app-detail-expensive',\r\n  templateUrl: './detail-expensive.component.html'\r\n})\r\nexport class DetailExpensiveComponent implements OnInit {\r\n  id: number = 0;\r\n  susP: Subscription = new Subscription();\r\n\r\n  gasto: any = [];\r\n  total: number = 0;\r\n\r\n  constructor(\r\n    private expensivesService: ExpensivesService, \r\n    private route: ActivatedRoute, \r\n    private router: Router\r\n  ) {\r\n    this.susP = this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.susP.unsubscribe();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      let response: any = await this.expensivesService.getDataExpense(this.id);\r\n\r\n      if (response && Object.keys(response).length) {\r\n        this.gasto = response;\r\n      }else{\r\n        if(this.router.url.indexOf('details') > 0){\r\n          this.router.navigate(['/dashboard/expensives']);\r\n        }\r\n      }\r\n    } catch (error) {debugger\r\n      console.log(error);\r\n      if(this.router.url.indexOf('details') > 0){\r\n        this.router.navigate(['/dashboard/expensives']);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ICategoryExpense } from 'src/app/interfaces/categories_expenses';\r\nimport { IUserData } from 'src/app/interfaces/user';\r\nimport { ExpensivesService } from 'src/app/services/expensives.service';\r\nimport { IState } from 'src/app/store';\r\nimport { CategoriesExpenses } from 'src/app/store/actions/categories_expenses';\r\n\r\n@Component({\r\n  selector: 'app-create-expensive-category',\r\n  templateUrl: './create-expensive-category.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class CreateExpensiveCategoryComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({});\r\n  form2: FormGroup = new FormGroup({});\r\n\r\n  sus: Subscription = new Subscription();\r\n  user: IUserData = {};\r\n\r\n  categories: Observable<any[]> = this.store.select(state => state.categories_expenses.data);\r\n\r\n  constructor(\r\n    private expensivesService: ExpensivesService,\r\n    private store: Store<IState>\r\n  ) { \r\n    this.sus = this.store.subscribe((state) => {\r\n      this.user = state.user.data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      category: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sus.unsubscribe();\r\n  }\r\n\r\n  async createExpensiveCategory(){\r\n    \r\n    if(this.form.valid){\r\n      let { category } = this.form.controls;\r\n\r\n      try {\r\n        let data = {\r\n          category: category.value,\r\n          person: this.user?.person?.id\r\n        };\r\n        let response: any = await this.expensivesService.createCategoryExpense(data);\r\n\r\n        if(response.category){\r\n          console.log('registro exitoso');\r\n          this.form.reset();\r\n          this.store.dispatch(CategoriesExpenses({any: response.categories}));\r\n        }else{\r\n          console.log('registro fallido');\r\n        }\r\n      } catch (error) {\r\n        console.log('error => ', error);\r\n      }\r\n\r\n    }\r\n  }\r\n  \r\n  async deleteCategory(item: ICategoryExpense){\r\n    // return;\r\n    if(item.id){\r\n      try {\r\n        let data = {\r\n          category: item.id,\r\n          person: item.id_person\r\n        };\r\n        let response: any = await this.expensivesService.deleteCategory(data);\r\n\r\n        if(response.category){\r\n          console.log('category eliminada exitosamente');\r\n          this.form.reset();\r\n          this.store.dispatch(CategoriesExpenses({any: response.categories}));\r\n        }else{\r\n          console.log('category eliminada fallida');\r\n        }\r\n      } catch (error) {\r\n        console.log('error => ', error);\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n","<div class=\"container pt-5 mx-auto\">\r\n  <div class=\"grid grid-cols-2 gap-4\">\r\n    <div>\r\n      <div class=\"container pt-5 mx-auto\">\r\n        <h1 class=\"text-center font-bold text-2xl mt-7 mb-5\"><span class=\"icon-data mr-1\"></span> Create Expensive Category</h1>\r\n      \r\n        <form [formGroup]=\"form\" (ngSubmit)=\"createExpensiveCategory()\">\r\n          <div class=\"w-full\">\r\n            <input type=\"text\" placeholder=\"Expensive Category Name\" formControlName=\"category\" class=\"w-full p-2 mb-2\">\r\n          </div>\r\n          <div class=\"w-full\">\r\n            <button type=\"submit\" class=\"btn-form\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <app-list-categories-expensives [padding]=\"false\" [complete]=\"false\"></app-list-categories-expensives>\r\n    </div>\r\n  </div>\r\n</div>","<div class=\"search-wrap pt-8 px-6 h-full\">\r\n  <div class=\"search-header\">\r\n    <h4 class=\"main-text flex justify-between\" *ngIf=\"expensives && expensives?.length\">\r\n      <span>\r\n        Have <b class=\"main-label\">{{ quantity | number }}</b> expensives with this category <b class=\"main-label\">{{ category?.name }}</b>, by total of <b class=\"main-label\">{{ total | currency:'$':'symbol':'4.0' }}</b>\r\n      </span>\r\n  \r\n      <div class=\"flex gap-2\">\r\n        <!-- Filters -->\r\n        <select class=\"pb-1\" [(ngModel)]=\"id\" (change)=\"seeByCategory()\">\r\n          <option [value]=\"'create'\" *ngIf=\"!(categories$ | async)?.length\" class=\"text-blue-400\">Create one</option>\r\n          <option [value]=\"item.id\" *ngFor=\"let item of (categories$ | async)\">{{ item.name }}</option>\r\n        </select>\r\n\r\n        <select [(ngModel)]=\"limit\" (change)=\"ngOnInit(true)\">\r\n          <option value=\"12\">12</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"24\">24</option>\r\n          <option value=\"36\">36</option>\r\n          <option value=\"48\">48</option>\r\n          <option value=\"60\">60</option>\r\n          <option value=\"100\">100</option>\r\n        </select>\r\n      </div>\r\n    </h4>\r\n  </div>\r\n  <div class=\"search-content overflow-auto\">\r\n    <div class=\"grid xl:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-4\" *ngIf=\"expensives && expensives.length\">\r\n      <ng-container *ngFor=\"let item of expensives;let i = index\">\r\n        <app-item-expensive [showDelete]=\"false\" [item]=\"item\"></app-item-expensive>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"alert p-2\" *ngIf=\"expensives && !expensives.length\">\r\n      There're not expensives for this category {{category?.name}}, create one <a [routerLink]=\"'/dashboard/expensives'\">here</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"search-footer\">\r\n    <div class=\"alert pt-3\" *ngIf=\"expensives && expensives.length\">\r\n      <a class=\"main-btn\" [routerLink]=\"'/dashboard/expensives/create'\"><span class=\"icon-coin-dollar mr-1\"></span> Create expensive</a>\r\n    </div>\r\n  \r\n    <div class=\"pagetor inline-flex justify-end items-end relative -top-6 text-sm fr\">\r\n      <button class=\"btn py-1 px-4 hover:bg-gray-800 transition-all text-white bg-gray-600 text-sm font-bold\" (click)=\"prev()\" *ngIf=\"(page + 1) > 1\"><</button>\r\n      <span class=\"p-1 bg-gray-900 text-white\">\r\n        Showing \r\n        <span *ngIf=\"limit * (page + 1) < quantity\">{{ limit * (page+1) }}</span>\r\n        <span *ngIf=\"limit * (page + 1) > quantity\">{{quantity}}</span> \r\n        of {{ quantity }} Registers | Page: \r\n        <select class=\"text-black\" [(ngModel)]=\"pageA\" (change)=\"setPage()\">\r\n          <option *ngFor=\"let item of pagesArray\" [value]=\"item\">{{item + 1}}</option>\r\n        </select>/{{ pages }}\r\n      </span>\r\n      <button class=\"btn py-1 px-4 hover:bg-gray-800 transition-all text-white bg-gray-600 text-sm font-bold\" (click)=\"next()\" *ngIf=\"page + 1 < pages\">></button>\r\n    </div>\r\n  </div>\r\n  \r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ICategoryExpense } from 'src/app/interfaces/categories_expenses';\r\nimport { IUserData } from 'src/app/interfaces/user';\r\nimport { ExpensivesService } from 'src/app/services/expensives.service';\r\nimport { IState } from 'src/app/store';\r\n\r\n@Component({\r\n  selector: 'app-detail-expensive-category',\r\n  templateUrl: './detail-expensive-category.component.html'\r\n})\r\nexport class DetailExpensiveCategoryComponent implements OnInit, OnDestroy {\r\n  id: number = 0;\r\n  user: IUserData = {};\r\n  susP: Subscription = new Subscription();\r\n  sus: Subscription = new Subscription();\r\n\r\n  expensives: any = [];\r\n  category: any = [];\r\n  total: number = 0;\r\n  quantity: number = 0;\r\n  page: number = 0;\r\n  pageA: any = 0;\r\n  pages: number = 0;\r\n  pagesArray: any[] = [];\r\n  limit: number = 24;\r\n\r\n  categories$: Observable<ICategoryExpense[]> = this.store.select((state) => state.categories_expenses.data);\r\n\r\n  constructor(\r\n    private store: Store<IState>, \r\n    private expensivesService: ExpensivesService,  \r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.susP = this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n    });\r\n    this.sus = this.store.select(state => state.user).subscribe(user => {\r\n      // console.warn(user);\r\n      this.user = user.data;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.susP.unsubscribe();\r\n    this.sus.unsubscribe();\r\n  }\r\n\r\n  async ngOnInit(reload?: boolean) {\r\n    try {\r\n      if(reload){\r\n        this.pageA = 0;\r\n        this.page = 0;\r\n        this.pages = 0;\r\n        this.quantity = 0;\r\n        this.total = 0;\r\n        this.expensives = [];\r\n      }\r\n\r\n      const params: any = {\r\n        id_category_expensives: this.id, \r\n        id_person: this.user.id,\r\n        page: this.page,\r\n        limit: this.limit,\r\n      };\r\n\r\n      let response: any = await this.expensivesService.getExpensesByCategory(params);\r\n\r\n      console.log(response);\r\n\r\n      if (response.category) {\r\n        this.category = response.category\r\n      }\r\n      if (response.expensives) {\r\n        this.expensives = response.expensives.rows;\r\n      }\r\n      if (response.total) {\r\n        this.total = response.total;\r\n      }\r\n      if (response.quantity) {\r\n        this.quantity = response.quantity;\r\n      }\r\n      if (response.pages) {\r\n        this.pages = response.pages;\r\n        // fill array with number pages\r\n        this.pagesArray = [];\r\n        for (let i = 0; i < this.pages; i++) {\r\n          this.pagesArray.push(i);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  setPage(): void {\r\n    this.page = parseInt(this.pageA);\r\n    this.ngOnInit();\r\n  }\r\n  next(): void {\r\n    this.page++;\r\n    this.pageA = this.page;\r\n    this.ngOnInit();\r\n  }\r\n\r\n  prev(): void {\r\n    this.page--;\r\n    this.pageA = this.page;\r\n    this.ngOnInit();\r\n  }\r\n\r\n  seeByCategory(){\r\n    this.router.navigateByUrl(`/dashboard/expensives/by-category/${this.id}`);\r\n    this.ngOnInit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"px-6 py-5\">\r\n  <form [formGroup]=\"form\">\r\n    <app-expensives-filters [form]=\"form\" [isFromGraphics]=\"true\"></app-expensives-filters>\r\n  </form>\r\n\r\n  <ng-container *ngIf=\"loaded\">\r\n    <div *ngIf=\"!form?.controls?.filter?.value\">\r\n      <app-line *ngIf=\"dataGraphics?.length\" \r\n        [dataGraphics]=\"dataGraphics\"\r\n        [nameLegend]=\"'All Time Expensives'\"\r\n        [nameAvg]=\"'Average All'\"\r\n        [title]=\"{\r\n          text: 'All Expensives',\r\n          align: 'center'\r\n        }\"\r\n      ></app-line>\r\n      <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"form.controls.filter.value === 'month' && form.controls.month.value\">\r\n      <app-line *ngIf=\"dataGraphics?.length\" \r\n            [dataGraphics]=\"dataGraphics\"\r\n            [type]=\"'month'\"\r\n            [nameLegend]=\"'Month Expensives'\"\r\n            [nameAvg]=\"'Average Month'\"\r\n            [title]=\"{\r\n              text: 'Month Expensives',\r\n              align: 'center'\r\n            }\"\r\n          ></app-line>\r\n      <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"form.controls.filter.value === 'year' && form.controls.year.value\">\r\n      <app-line *ngIf=\"dataGraphics?.length\" \r\n            [dataGraphics]=\"dataGraphics\"\r\n            [type]=\"'year'\"\r\n            [nameLegend]=\"'Year Expensives'\"\r\n            [nameAvg]=\"'Average Year'\"\r\n            [xAxis]=\"{}\"\r\n            [title]=\"{\r\n              text: 'Year Expensives',\r\n              align: 'center'\r\n            }\"\r\n          ></app-line>\r\n      <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"form.controls.filter.value === 'date' && form.controls.date.value\">\r\n      <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n    </div>\r\n\r\n    <div *ngIf=\"form.controls.filter.value === 'dates' && form.controls.date1.value && form.controls.date2.value\">\r\n      <ng-template [ngTemplateOutlet]=\"donuts\"></ng-template>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #donuts >\r\n  <div class=\"grid grid-cols-2\">\r\n    <app-donut *ngIf=\"dataGraphics?.length\" \r\n      [dataGraphics]=\"dataGraphics\"\r\n      [type]=\"'categoryexpensives'\"\r\n      [title]=\"{\r\n        text: 'Year Category',\r\n        align: 'center'\r\n      }\"\r\n      ></app-donut>\r\n\r\n    <app-donut *ngIf=\"dataGraphics?.length\" \r\n      [dataGraphics]=\"dataGraphics\"\r\n      [type]=\"'account'\"\r\n      [title]=\"{\r\n        text: 'Year Category',\r\n        align: 'center'\r\n      }\"\r\n      ></app-donut>\r\n  </div>\r\n</ng-template>\r\n","import { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { StartExpensivesComponent } from \"./start-expensives/start-expensives.component\";\r\nimport { DashboardService } from \"src/app/guards/dashboard.service\";\r\nimport { ExpensivesComponent } from \"./expensives.component\";\r\nimport { CreateExpensiveComponent } from \"./create/create-expensive.component\";\r\nimport { DetailExpensiveComponent } from \"./detail/detail-expensive.component\";\r\nimport { CreateExpensiveCategoryComponent } from \"./expensive-category/create/create-expensive-category.component\";\r\nimport { DetailExpensiveCategoryComponent } from \"./expensive-category/detail/detail-expensive-category.component\";\r\nimport { ListCategoriesExpensivesComponent } from \"./expensive-category/list/list.component\";\r\nimport { HomeExpensivesComponent } from \"./home/home-expensives.component\";\r\nimport { GraphicsExpensivesComponent } from \"./graphics/graphics-expensives.component\";\r\n\r\nconst routes: Routes = [\r\n    { \r\n        path: '', component: StartExpensivesComponent, canActivate: [DashboardService],\r\n        children: [\r\n            { path: '', component: HomeExpensivesComponent },\r\n            { path: 'create', component: ExpensivesComponent },\r\n            { path: 'graphics', component: GraphicsExpensivesComponent },\r\n            { path: ':id/details', component: DetailExpensiveComponent },\r\n            \r\n            { path: 'categories', component: ListCategoriesExpensivesComponent },\r\n            { path: 'categories/create', component: CreateExpensiveCategoryComponent },\r\n            { path: 'by-category/:id', component: DetailExpensiveCategoryComponent },\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class ExpensivesRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { UtilsExpensivesService } from '../services/utils-expensives.service';\r\n\r\n@Component({\r\n  selector: 'app-home-expensives',\r\n  templateUrl: './home-expensives.component.html'\r\n})\r\nexport class HomeExpensivesComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(private utils: UtilsExpensivesService) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(){\r\n    this.form = this.utils.form();\r\n  }\r\n\r\n}\r\n","<div class=\"px-6 py-5\">\r\n  <form [formGroup]=\"form\">\r\n    <app-expensives-filters [form]=\"form\"></app-expensives-filters>\r\n  </form>\r\n\r\n  <app-expensives-person \r\n    [showHeader]=\"false\" \r\n    [showLink]=\"false\" \r\n    [showDelete]=\"true\" \r\n    [padding]=\"false\"></app-expensives-person>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { IState } from 'src/app/store';\r\nimport { Store } from '@ngrx/store';\r\nimport { UtilsExpensivesService } from '../services/utils-expensives.service';\r\n\r\n@Component({\r\n  selector: 'app-graphics-expensives',\r\n  templateUrl: './graphics-expensives.component.html'\r\n})\r\nexport class GraphicsExpensivesComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  loading: boolean = false;\r\n  loaded: boolean = false;\r\n  dataGraphics: any = [];\r\n\r\n  sub: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private utils: UtilsExpensivesService,\r\n    private store: Store<IState>,\r\n  ) {\r\n    this.sub = this.store.select(state => state).subscribe(data => {\r\n      try {\r\n        this.loading = data?.expensives?.loading;\r\n        this.loaded = data?.expensives?.loaded;\r\n\r\n        this.dataGraphics = [{}, ...data?.expensives?.complete];\r\n      } catch (error) { console.log(error); }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(){\r\n    this.form = this.utils.form();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharedModule } from 'src/app/components/shared.module';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ExpensivesRoutingModule } from './expensives-routing.module';\r\nimport { StartExpensivesComponent } from './start-expensives/start-expensives.component';\r\nimport { ExpensivesComponent } from './expensives.component';\r\nimport { CreateExpensiveComponent } from './create/create-expensive.component';\r\nimport { DetailExpensiveComponent } from './detail/detail-expensive.component';\r\nimport { CreateExpensiveCategoryComponent } from './expensive-category/create/create-expensive-category.component';\r\nimport { DetailExpensiveCategoryComponent } from './expensive-category/detail/detail-expensive-category.component';\r\nimport { HomeExpensivesComponent } from './home/home-expensives.component';\r\nimport { GraphicsExpensivesComponent } from './graphics/graphics-expensives.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StartExpensivesComponent,\r\n    ExpensivesComponent,\r\n    CreateExpensiveComponent,\r\n    DetailExpensiveComponent,\r\n    CreateExpensiveCategoryComponent,\r\n    DetailExpensiveCategoryComponent,\r\n    HomeExpensivesComponent,\r\n    GraphicsExpensivesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NgApexchartsModule,\r\n    ExpensivesRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class ExpensivesModule { }\r\n"],"sourceRoot":"webpack:///","file":"745.61a0f95ab455b7acca9a.js"}