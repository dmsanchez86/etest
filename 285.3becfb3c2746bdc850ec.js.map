{"version":3,"mappings":"4SAIMA,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UCSpC,MAAM,QAGJC,YACUC,EACAC,EACAC,EACAC,GAHAC,mBACAA,mBACAA,aACAA,cANVA,UAAkB,IAAIC,KAAU,IAQ3BC,aAAaC,OACdH,KAAKI,OAAOC,cAAc,cAI9BC,WACEN,KAAKO,KAAO,IAAIN,KAAU,CACxBO,KAAM,IAAIP,KAAY,GAAIA,eAC1BQ,SAAU,IAAIR,KAAY,GAAIA,iBAI5BS,WAAQ,qCAIZ,GAFAd,EAAKe,MAAMC,UAAS,WAEhBhB,EAAKW,KAAKM,MAAO,CACnB,IAAML,OAAMC,YAAab,EAAKW,KAAKO,SAE/Bf,EAAO,CAAES,KAAMX,EAAKkB,MAAON,SAAUX,EAASiB,OAClD,IACE,IAAIC,QAAsBpB,EAAKqB,YAAYP,SAASX,GAEhDmB,OAAOC,KAAKH,GAAUI,QAAUJ,EAASK,IAC3CzB,EAAKQ,OAAOC,cAAc,eAAeN,EAAKS,sBAC9Cc,SAAU,sBAAuB,oBAAqB,WAEtD1B,EAAKe,MAAMC,YAASW,MAAgB,CAAEC,IAAKR,OAE3CpB,EAAKe,MAAMC,YAASW,MAAa,CAAEC,IAAKR,KACrCA,EAASS,OAAOH,SAAUN,EAASS,MAAO,GAAI,gBAE5CT,GACPU,QAAQD,MAAM,YAAaT,GAC3BM,SAAe,MAALN,OAAK,EAALA,EAAOS,MAAO,GAAI,SAE5B7B,EAAKe,MAAMC,YAASW,MAAa,CAAEC,IAAKR,QAxBhC,iDArBHW,GAAiBC,wEAAjBD,EAAiBE,ypBCb9BD,iBACEA,kBAAmDA,mCAAY/B,eAC7D+B,iBACEA,kBACFA,QACAA,iBACEA,eACEA,mBACFA,QACAA,eACEA,mBACFA,QACFA,QACAA,oBAAsFA,qBAAQA,QAE9FA,kBACEA,gBAA8CA,mBAAMA,QACtDA,QACFA,QACFA,eAlBkCA,mCAeHA,4GDHlBD,GAAb,KDHO,IAAMG,EAAb,MAAM,sDAAOH,4DAHF,CAACI,cAAsBvC,IACtBuC,QAECJ,GAAb,GGIaK,EAAb,MAAM,sDAAOL,4DAPF,CACPM,KACAH,EACA7B,SAIS0B,GAAb","names":["w","path","component","constructor","r","a","c","d","this","s","localStorage","login","router","navigateByUrl","ngOnInit","form","user","password","register","store","dispatch","valid","controls","value","n","authService","Object","keys","length","id","g","l","any","error","console","t","e","selectors","T","u","x","p"],"sources":["./src/app/pages/register/register-routing.module.ts","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/register/register.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegisterRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Register, RegisterFail, RegisterSuccess } from 'src/app/store/actions/user';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private store: Store<Store>,\r\n    private router: Router\r\n  ) {\r\n    if(localStorage.login){\r\n      this.router.navigateByUrl('/dashboard');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      user: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  async register() {\r\n\r\n    this.store.dispatch(Register());\r\n\r\n    if (this.form.valid) {\r\n      let { user, password } = this.form.controls;\r\n\r\n      let data = { user: user.value, password: password.value };\r\n      try {\r\n        let response: any = await this.authService.register(data);\r\n\r\n        if (Object.keys(response).length && response.id) {\r\n          this.router.navigateByUrl(`/login?user=${data.user}&register=true`);\r\n          Swal.fire('Register Succesfull', 'You can login now', 'success');\r\n\r\n          this.store.dispatch(RegisterSuccess({ any: response }));\r\n        } else {\r\n          this.store.dispatch(RegisterFail({ any: response }));\r\n          if(response.error) Swal.fire(response.error, '', 'error');\r\n        }\r\n      } catch (error: any) {\r\n        console.error('error => ', error);\r\n        Swal.fire(error?.error, '', 'error');\r\n\r\n        this.store.dispatch(RegisterFail({ any: error }));\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"flex items-center justify-center min-h-screen\">\r\n  <form class=\"p-8 text-xl w-1/2\" [formGroup]=\"form\" (ngSubmit)=\"register()\">\r\n    <div class=\"text-center mb-4\">\r\n      <span class=\"icon-banknote text-10xl\"></span>\r\n    </div>\r\n    <div class=\"grid gap-4 grid-cols-2 mb-4\">\r\n      <div>\r\n        <input class=\"w-full p-2 rounded-sm bg-gray-400\" type=\"text\" placeholder=\"User\" formControlName=\"user\">\r\n      </div>\r\n      <div>\r\n        <input class=\"w-full p-2 rounded-sm bg-gray-400\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"block w-full uppercase p-2 rounded-sm bg-top text-white\">Register</button>\r\n\r\n    <div class=\"text-center mt-4\">\r\n      <a class=\"text-blue-500\" [routerLink]=\"['/']\">Log In</a>\r\n    </div>\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register.component';\r\nimport { RegisterRoutingModule } from './register-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegisterRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegisterComponent]\r\n})\r\nexport class RegisterModule { }\r\n"],"sourceRoot":"webpack:///","file":"285.3becfb3c2746bdc850ec.js"}