{"version":3,"mappings":"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","names":["K","constructor","e","t","c","n","this","y","subP","activatedRoute","queryParams","subscribe","i","susA","actions","ngOnInit","getAllData","ngOnDestroy","l","d","selectors","j","form","Date","getFullYear","getMonth","setDate","getDate","v","o","filter","month","date","date1","date2","week","year","notincategory","notinaccount","limit","orderKey","orderType","price","fixed","transfers","atm","installments","id_account","category","createUrl","pagesArray","pages","total","quantity","router","url","includes","navigate","relativeTo","Object","expensivesFilter","value","join","type","setDataOnForm","manageService","store","dispatch","b","filters","ref","storeSrv","expensivesByDate","keys","length","controls","setValue","split","map","parseInt","factory","G","path","component","canActivate","S","children","buildForm","utils","select","expensives","showChart","categories_expenses","data","user","accounts","sub","loading","loaded","g","V","dataGraphics","x","complete","A","console","log","unsubscribe","toggleChart","U","f","k","C","F","T","N"],"sources":["./src/app/pages/dashboard/vehicles/start/start-vehicles.component.ts","./src/app/pages/dashboard/vehicles/services/services/utils-vehicles.service.ts","./src/app/pages/dashboard/vehicles/vehicles-routing.module.ts","./src/app/pages/dashboard/vehicles/home/home-vehicles.component.ts","./src/app/pages/dashboard/vehicles/home/home-vehicles.component.html","./src/app/pages/dashboard/vehicles/vehicles.component.ts","./src/app/pages/dashboard/vehicles/vehicles.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { StoreService } from 'src/app/services/store.service';\r\nimport { IState } from 'src/app/store';\r\nimport { ResetFiltersExpensives, SetFiltersExpensivesInitial } from 'src/app/store/actions/expensives.actions';\r\n\r\n@Component({\r\n  selector: 'app-start-vehicles',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\nexport class StartVehiclesComponent implements OnInit, OnDestroy {\r\n  params: any = {};\r\n\r\n  validationInitial: boolean = false;\r\n\r\n  subP: Subscription = new Subscription();\r\n  susA: Subscription = new Subscription();\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute, \r\n    private store: Store<IState>,\r\n    private storeSrv: StoreService,\r\n    private actions: Actions<IState>\r\n  ) {\r\n    this.subP = this.activatedRoute.queryParams.subscribe(params => {\r\n      // // console.log('qa suscription (router) params start-expensives.component', params);\r\n\r\n      // if(Object.keys(this.params).length && !Object.keys(params).length){\r\n      //   this.store.dispatch(ResetFiltersExpensives());\r\n      // }\r\n\r\n      // this.params = params;\r\n    });\r\n\r\n    this.susA = this.actions.subscribe((action: any) => {\r\n      // // console.log('action', action);\r\n      // if(\r\n      //   action.type === '[Expensives User] Create Success' || \r\n      //   action.type === '[Expensives User] Delete Success'\r\n      // ){\r\n      //   this.getAllData(true);\r\n      // }\r\n\r\n      // if(action.type === '[Expensives User] Reset Filters Expensives'){\r\n      //   this.params = {};\r\n      //   this.getAllData(true);\r\n      // }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // if(Object.keys(this.params).length){\r\n    //   this.store.dispatch(SetFiltersExpensivesInitial({filters: this.params, ref: 'initial start 999999999999' }));\r\n    //   this.validationInitial = true;\r\n    //   await this.storeSrv.expensivesByDate(this.params, 'onInitSTART EXPENSIVES1');\r\n    // }\r\n    // this.getAllData();\r\n    // await this.storeSrv.getCategoriesExpensives();\r\n  }\r\n  \r\n  async getAllData(reload: boolean = false) {\r\n    // if(Object.keys(this.params).length > 1 && !reload){\r\n    //   return;\r\n    // }\r\n    // await this.storeSrv.expensivesByDate(this.params, 'onInitSTART EXPENSIVES');\r\n    // await this.storeSrv.getAllDataExpensives();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.subP.unsubscribe();\r\n    // this.susA.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { StoreService } from 'src/app/services/store.service';\r\nimport { IState } from 'src/app/store';\r\nimport { SetFiltersExpensives } from 'src/app/store/actions/expensives.actions';\r\nimport { currentDateInput } from 'src/environments/global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsVehiclesService {\r\n\r\n  constructor(\r\n    private storeSrv: StoreService,\r\n    private store: Store<IState>,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  form(): FormGroup {\r\n    const yearValue = new Date().getFullYear();\r\n    const monthValue = new Date().getMonth() + 1;\r\n    const currentDate = new Date();\r\n    const result = currentDate.setDate(currentDate.getDate() + 7);\r\n    const date = currentDateInput(new Date());\r\n    const dateT = currentDateInput(new Date(result));\r\n\r\n    return new FormGroup({\r\n      filter: new FormControl('', Validators.required),\r\n      month: new FormControl(`${yearValue}-${monthValue < 10 ? `0${monthValue}` : monthValue}`, Validators.required),\r\n      date: new FormControl(date, Validators.required),\r\n      date1: new FormControl(date, Validators.required),\r\n      date2: new FormControl(dateT, Validators.required),\r\n      week: new FormControl('', Validators.required),\r\n      year: new FormControl(yearValue, Validators.required),\r\n      notincategory: new FormControl('', Validators.required),\r\n      notinaccount: new FormControl('', Validators.required),\r\n      limit: new FormControl(20),\r\n      orderKey: new FormControl('date'),\r\n      orderType: new FormControl('DESC'),\r\n      price: new FormControl(),\r\n      fixed: new FormControl(),\r\n      transfers: new FormControl(),\r\n      atm: new FormControl(),\r\n      installments: new FormControl(),\r\n\r\n      id_account: new FormControl('', Validators.required),\r\n      category: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  createUrl(params: any, activatedRoute: ActivatedRoute, ref: string){\r\n    // console.log(this.router.url.includes('expensives'));\r\n    if(params.pagesArray) delete params.pagesArray;\r\n    if(params.pages) delete params.pages;\r\n    if(params.total) delete params.total;\r\n    if(params.quantity) delete params.quantity;\r\n\r\n    if(this.router.url.includes('expensives')) {\r\n      // console.error(this.router.url);\r\n      // console.log('createUrl (event)', ref, params);\r\n\r\n      this.router.navigate([], {\r\n        relativeTo: activatedRoute,\r\n        queryParams: {...params},\r\n        // queryParamsHandling: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  async expensivesFilter(params: any, activatedRoute: ActivatedRoute, form: FormGroup) {\r\n    let dataForm = {...form.value};\r\n\r\n    if(dataForm.category){ params.category = dataForm.category ? dataForm.category.join(',') : null; }\r\n    if(dataForm.notincategory){ params.notincategory = dataForm.notincategory ? dataForm.notincategory.join(',') : null; }\r\n    if(dataForm.notinaccount){ params.notinaccount = dataForm.notinaccount ? dataForm.notinaccount.join(',') : null; }\r\n    if(dataForm.id_account){ params.id_account = dataForm.id_account ? dataForm.id_account.join(',') : null; }\r\n    if(dataForm.limit){ params.limit = dataForm.limit; }\r\n    if(dataForm.orderKey){ params.orderKey = dataForm.orderKey; }\r\n    if(dataForm.orderType){ params.orderType = dataForm.orderType; }\r\n    if(dataForm.price){ params.price = dataForm.price; }\r\n    if(dataForm.transfers){ params.transfers = dataForm.transfers; }\r\n    if(dataForm.fixed){ params.fixed = dataForm.fixed; }\r\n    if(dataForm.atm){ params.atm = dataForm.atm; }\r\n    if(dataForm.installments){ params.installments = dataForm.installments; }\r\n\r\n    if(params.category === '') delete params.category;\r\n    if(params.notincategory === '') delete params.notincategory;\r\n    if(params.notinaccount === '') delete params.notinaccount;\r\n    if(params.id_account === '') delete params.id_account;\r\n    if(params.limit === '') delete params.limit;\r\n    if(params.orderKey === '') delete params.orderKey;\r\n    if(params.orderType === '') delete params.orderType;\r\n    if(params.price === '') delete params.price;\r\n    if(!params.price) delete params.price;\r\n    if(params.transfers === '' || !form.value.transfers) delete params.transfers;\r\n    if(params.atm === '' || !form.value.atm) delete params.atm;\r\n    if(params.fixed === '' || !form.value.fixed) delete params.fixed;\r\n    if(params.installments === '' || !form.value.installments) delete params.installments;\r\n\r\n    if(dataForm.filter) params.type = dataForm.filter;\r\n\r\n    if(dataForm.filter === 'today'){\r\n      // clean others fields if exists\r\n      if(params.month) delete params.month;\r\n      if(params.year) delete params.year;\r\n      if(params.date1) delete params.date1;\r\n      if(params.date2) delete params.date2;\r\n      if(params.date) delete params.date;\r\n\r\n      params = { ...params };\r\n    }else if(dataForm.filter === 'year' && dataForm.year){\r\n      // clean others fields if exists\r\n      if(params.month) delete params.month;\r\n      if(params.date1) delete params.date1;\r\n      if(params.date2) delete params.date2;\r\n      if(params.date) delete params.date;\r\n      params = {\r\n        ...params,\r\n        year: dataForm.year,\r\n      };\r\n    }else if(dataForm.filter === 'month' && dataForm.month){\r\n      // clean others fields if exists\r\n      if(params.year) delete params.year;\r\n      if(params.date1) delete params.date1;\r\n      if(params.date2) delete params.date2;\r\n      if(params.date) delete params.date;\r\n      params = {\r\n        ...params,\r\n        month: dataForm.month,\r\n      };\r\n    }else if(dataForm.filter === 'dates' && dataForm.date1 && dataForm.date2){\r\n      // clean others fields if exists\r\n      if(params.month) delete params.month;\r\n      if(params.year) delete params.year;\r\n      if(params.date) delete params.date;\r\n      params = {\r\n        ...params,\r\n        date1: dataForm.date1,\r\n        date2: dataForm.date2,\r\n      };\r\n    }else if(dataForm.filter === 'date' && dataForm.date){\r\n      // clean others fields if exists\r\n      if(params.month) delete params.month;\r\n      if(params.year) delete params.year;\r\n      if(params.date1) delete params.date1;\r\n      if(params.date2) delete params.date2;\r\n      params = {\r\n        ...params,\r\n        date: dataForm.date,\r\n      };\r\n    }else if(dataForm.filter === 'week' && dataForm.week){\r\n      params = {\r\n        ...params,\r\n        type: 'date',\r\n        week: dataForm.week,\r\n      };\r\n    }else{\r\n      // clean all fields if exists\r\n      if(params.type) delete params.type;\r\n      if(params.month) delete params.month;\r\n      if(params.year) delete params.year;\r\n      if(params.date1) delete params.date1;\r\n      if(params.date2) delete params.date2;\r\n      if(params.date) delete params.date;\r\n      if(\r\n        dataForm.category || \r\n        dataForm.notincategory || \r\n        dataForm.notinaccount || \r\n        dataForm.limit || \r\n        dataForm.orderKey || \r\n        dataForm.orderType || \r\n        dataForm.price || \r\n        dataForm.atm || \r\n        dataForm.fixed || \r\n        dataForm.installments || \r\n        dataForm.transfers || \r\n        dataForm.id_account\r\n      ){\r\n        params = { ...params };\r\n      }\r\n    }\r\n    this.setDataOnForm(form, params, 'expensivesFilter()');\r\n    await this.manageService(params, activatedRoute, !dataForm.filter?'normal filters -----------------':dataForm.filter);\r\n\r\n    if(!params.category) delete params.category;\r\n    if(!params.notincategory) delete params.notincategory;\r\n    if(!params.notinaccount) delete params.notinaccount;\r\n    if(!params.id_account) delete params.id_account;\r\n    if(!params.limit) delete params.limit;\r\n    if(!params.orderKey) delete params.orderKey;\r\n    if(!params.orderType) delete params.orderType;\r\n  }\r\n\r\n  async manageService(params: any, activatedRoute: ActivatedRoute, ref?: string){\r\n    // console.log('event ManageService() ', params, ref);\r\n    this.store.dispatch(SetFiltersExpensives({filters: {...params}, ref: 'manageService Filters UTILS'}));\r\n    this.createUrl(params, activatedRoute, 'expensivesFilterManage()');\r\n    await this.storeSrv.expensivesByDate(params, ref+'filters');\r\n  }\r\n\r\n  setDataOnForm(form: FormGroup, params: any, ref?: string){\r\n    // console.warn('start event setDataOnForm()', ref);\r\n    if(this.router.url.includes('expensives')){\r\n      if(!Object.keys(form.value).length){\r\n        // console.error('form has no values****');\r\n        return;\r\n      }\r\n      // console.log('event setDataOnForm() ', params, form);\r\n      form.controls.filter.setValue(params?.type);\r\n      if(params?.type === 'year'){\r\n        form.controls.year.setValue(params?.year);\r\n      }\r\n      if(params?.type === 'month'){\r\n        form.controls.month.setValue(params?.month);\r\n      }\r\n      if(params?.type === 'dates'){\r\n        form.controls.date1.setValue(params?.date1);\r\n        form.controls.date2.setValue(params?.date2);\r\n      }\r\n      if(params?.type === 'date'){\r\n        form.controls.date.setValue(params?.date);\r\n      }\r\n      if(params?.type === 'week'){\r\n        form.controls.week.setValue(params?.week);\r\n      } \r\n\r\n      if(params?.category){\r\n        form.controls.category.setValue(params?.category.split(',').map((i: any) => parseInt(i)));\r\n      }\r\n      if(params?.notincategory){\r\n        form.controls.notincategory.setValue(params?.notincategory.split(',').map((i: any) => parseInt(i)));\r\n      }\r\n      if(params?.notinaccount){\r\n        form.controls.notinaccount.setValue(params?.notinaccount.split(',').map((i: any) => parseInt(i)));\r\n      }\r\n      if(params?.id_account){\r\n        form.controls.id_account.setValue(params?.id_account.split(',').map((i: any) => parseInt(i)));\r\n      }\r\n      if(params?.limit){\r\n        form.controls.limit.setValue(params?.limit);\r\n      }\r\n      if(params?.orderKey){\r\n        form.controls.orderKey.setValue(params?.orderKey);\r\n      }\r\n      if(params?.orderType){\r\n        form.controls.orderType.setValue(params?.orderType);\r\n      }\r\n      if(params?.price){\r\n        form.controls.price.setValue(params?.price);\r\n      }\r\n      if(params?.atm && form.value.atm){\r\n        form.controls.atm.setValue(params?.atm || form.value.atm);\r\n      }else if(form.value.atm || params?.atm){\r\n        form.controls.atm.setValue(form.value.atm || params.atm);\r\n      }else{\r\n        form.controls.atm.setValue(null);\r\n      }\r\n      if(params?.transfers && form.value.transfers){\r\n        form.controls.transfers.setValue(params?.transfers || form.value.transfers);\r\n      }else if(form.value.transfers || params?.transfers){\r\n        form.controls.transfers.setValue(form.value.transfers || params.transfers);\r\n      }else{\r\n        form.controls.transfers.setValue(null);\r\n      }\r\n\r\n      if(params?.fixed && form.value.fixed){\r\n        form.controls.fixed.setValue(params?.fixed || form.value.fixed);\r\n      }else if(form.value.fixed || params?.fixed){\r\n        form.controls.fixed.setValue(form.value.fixed || params.fixed);\r\n      }else{\r\n        form.controls.fixed.setValue(null);\r\n      }\r\n\r\n      if(params?.installments && form.value.installments){\r\n        form.controls.installments.setValue(params?.installments || form.value.installments);\r\n      }else if(form.value.installments || params?.installments){\r\n        form.controls.installments.setValue(form.value.installments || params.installments);\r\n      }else{\r\n        form.controls.installments.setValue(null);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\n// import { StartExpensivesComponent } from \"./start/start-vehicles.component\";\r\nimport { DashboardService } from \"src/app/guards/dashboard.service\";\r\n// import { ExpensivesComponent } from \"./vehicles.component\";\r\n// import { CreateExpensiveComponent } from \"./create/create-expensive.component\";\r\n// import { DetailExpensiveComponent } from \"./detail/detail-vehicle.component\";\r\n// import { CreateExpensiveCategoryComponent } from \"../expensives copy/expensive-category/create/create-expensive-category.component\";\r\n// import { DetailExpensiveCategoryComponent } from \"../expensives copy/expensive-category/detail/detail-expensive-category.component\";\r\n// import { ListCategoriesExpensivesComponent } from \"../expensives copy/expensive-category/list/list.component\";\r\n// import { HomeExpensivesComponent } from \"./home/home-expensives.component\";\r\n// import { GraphicsExpensivesComponent } from \"../expensives copy/graphics/graphics-expensives.component\";\r\nimport { StartVehiclesComponent } from \"./start/start-vehicles.component\";\r\nimport { HomeVehiclesComponent } from \"./home/home-vehicles.component\";\r\nimport { VehiclesComponent } from \"./vehicles.component\";\r\n\r\nconst routes: Routes = [\r\n    { \r\n        path: '', component: StartVehiclesComponent, canActivate: [DashboardService],\r\n        children: [\r\n            { path: '', component: HomeVehiclesComponent },\r\n            { path: 'create', component: VehiclesComponent },\r\n            // { path: 'graphics', component: GraphicsExpensivesComponent },\r\n            // { path: ':id/details', component: DetailExpensiveComponent },\r\n            \r\n            // { path: 'categories', component: ListCategoriesExpensivesComponent },\r\n            // { path: 'categories/create', component: CreateExpensiveCategoryComponent },\r\n            // { path: 'by-category/:id', component: DetailExpensiveCategoryComponent },\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class ExpensivesRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { UtilsVehiclesService } from '../services/services/utils-vehicles.service';\r\n\r\n@Component({\r\n  selector: 'app-home-vehicles',\r\n  templateUrl: './home-vehicles.component.html'\r\n})\r\nexport class HomeVehiclesComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(private utils: UtilsVehiclesService) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(){\r\n    this.form = this.utils.form();\r\n  }\r\n\r\n}\r\n","<div class=\"px-6 py-5\">\r\n  <!-- <form [formGroup]=\"form\">\r\n    <app-expensives-filters [form]=\"form\"></app-expensives-filters>\r\n  </form>\r\n\r\n  <app-expensives-person \r\n    [showHeader]=\"false\" \r\n    [showLink]=\"false\" \r\n    [showDelete]=\"true\" \r\n    [padding]=\"false\"></app-expensives-person> -->\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ICategoryExpense } from 'src/app/interfaces/categories_expenses';\r\nimport { IState } from 'src/app/store';\r\nimport { IAccount } from 'src/app/interfaces/accounts';\r\nimport { IUserData } from 'src/app/interfaces/user';\r\nimport { IStoreExpensives } from 'src/app/interfaces/expensives'\r\nimport { SetShowChartFiltersExpensives } from 'src/app/store/actions/expensives.actions';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UtilsVehiclesService } from './services/services/utils-vehicles.service';\r\n\r\n@Component({\r\n  selector: 'app-vehicles',\r\n  templateUrl: './vehicles.component.html',\r\n})\r\nexport class VehiclesComponent implements OnInit, OnDestroy {\r\n  public chartOptionsMonth4: any;\r\n  public chartOptionsYear2: any;\r\n\r\n  showChart$: Observable<boolean> = this.store.select((state) => state?.expensives?.filters?.showChart);\r\n\r\n  user:IUserData = {};\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  expensives$: Observable<IStoreExpensives> = this.store.select((state) => state.expensives);\r\n\r\n  categories: Observable<ICategoryExpense[]> = this.store.select(state => state.categories_expenses.data);\r\n  accounts$: Observable<IAccount[]> = this.store.select(state => state?.user?.accounts);\r\n\r\n  queryParams: any;\r\n\r\n  loading: boolean = false;\r\n  loaded: boolean = false;\r\n\r\n  yearValue: any;\r\n  monthValue: any;\r\n\r\n  dataGraphicMonth2: any = [];\r\n  dataGraphicMonth3: any = [];\r\n  dataGraphicMonth4: any = [];\r\n  dataGraphicYear2: any = [];\r\n\r\n  sub: Subscription = new Subscription();\r\n\r\n  dataGraphics: any = [];\r\n\r\n  constructor(\r\n    private store: Store<IState>, \r\n    private activatedRoute: ActivatedRoute,\r\n    private utils: UtilsVehiclesService\r\n  ) {\r\n    this.buildForm();\r\n\r\n    this.sub = this.store.select(state => state).subscribe(data => {\r\n      try {\r\n        this.loading = data?.expensives?.loading;\r\n        this.loaded = data?.expensives?.loaded;\r\n        this.user = data?.user?.data;\r\n        this.queryParams = data?.expensives?.filters;\r\n\r\n        this.dataGraphics = [{}, ...data?.expensives?.complete];\r\n      } catch (error) { console.log(error); }\r\n    });\r\n  }\r\n\r\n  buildForm(){\r\n    this.form = this.utils.form();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  toggleChart(): void{\r\n    this.store.dispatch(SetShowChartFiltersExpensives());\r\n    this.utils.createUrl({...this.queryParams}, this.activatedRoute, 'toggleChart()');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharedModule } from 'src/app/components/shared.module';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ExpensivesRoutingModule } from './vehicles-routing.module';\r\nimport { StartVehiclesComponent } from './start/start-vehicles.component';\r\n// import { ExpensivesComponent } from './vehicles.component';\r\n// import { CreateExpensiveComponent } from './create/create-expensive.component';\r\n// import { DetailExpensiveComponent } from './detail/detail-expensive.component';\r\n// import { CreateExpensiveCategoryComponent } from '../expensives copy/expensive-category/create/create-expensive-category.component';\r\n// import { DetailExpensiveCategoryComponent } from '../expensives copy/expensive-category/detail/detail-expensive-category.component';\r\n// import { HomeExpensivesComponent } from './home/home-expensives.component';\r\n// import { GraphicsExpensivesComponent } from '../expensives copy/graphics/graphics-expensives.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StartVehiclesComponent,\r\n    // ExpensivesComponent,\r\n    // CreateExpensiveComponent,\r\n    // DetailExpensiveComponent,\r\n    // CreateExpensiveCategoryComponent,\r\n    // DetailExpensiveCategoryComponent,\r\n    // HomeExpensivesComponent,\r\n    // GraphicsExpensivesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NgApexchartsModule,\r\n    ExpensivesRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class VehiclesModule { }\r\n"],"sourceRoot":"webpack:///","file":"324.f43b7ded1ac61a804d08.js"}